name: CI

on: [push, pull_request]

permissions:
  contents: read

env:
  OUT_DIR: app/frontend/out
  DENO_PACKAGE: lib/abi/deno

jobs:
  frontend:
    runs-on: ${{ matrix.operating-system }}

    defaults:
      run:
        working-directory: app/frontend

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        bun-version: [1.0.29]

    name: 👷 CI Sikessem frontend under ${{ matrix.operating-system }} using Bun@${{ matrix.bun-version }}

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: 🔧 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: ⚡️ Install dependencies
        run: bun install

      - name: ✅ Check types
        run: ./run check

      - name: 🍱 Build assets
        run: ./run build

      - name: 📂 List ../../${{ env.OUT_DIR }}
        run: ls -R ../../${{ env.OUT_DIR }}

      - name: 🚚 Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: out-dir
          path: ${{ env.OUT_DIR }}

  library:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        bun-version: [1.0.29]

    name: 👷 CI Sikessem library under ${{ matrix.operating-system }} using Bun@${{ matrix.bun-version }}

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: 🔧 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: ⚡️ Install dependencies
        run: bun install

      - name: ✅ Check types
        run: bun ci

      - name: 🍱 Build assets
        run: bun denoify

      - name: 📂 List ${{ env.DENO_PACKAGE }}
        run: ls -R ${{ env.DENO_PACKAGE }}

      - name: 🚚 Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: deno-package
          path: ${{ env.DENO_PACKAGE }}

  backend:
    needs: [frontend, library]
    runs-on: ${{ matrix.operating-system }}

    defaults:
      run:
        working-directory: app/backend

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        deno-version: [1.41.0]

    name: 👷 CI Sikessem backend under ${{ matrix.operating-system }} using Deno@${{ matrix.deno-version }}

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: 🔨 Configure Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: 🚚 Download distribution files
        uses: actions/download-artifact@v4
        with:
          name: out-dir
          path: ${{ env.OUT_DIR }}

      - name: 📂 List ../../${{ env.OUT_DIR }}
        run: ls -R ../../${{ env.OUT_DIR }}

      - name: 🚚 Download deno library
        uses: actions/download-artifact@v4
        with:
          name: deno-package
          path: ${{ env.DENO_PACKAGE }}

      - name: 📂 List ../../${{ env.DENO_PACKAGE }}
        run: ls -R ../../${{ env.DENO_PACKAGE }}

      - name: ✅ Check files
        run: ./task check
      
      - name: 🧪 Test server
        run: ./task serve > /dev/null 2>&1 &
